[WMI, dynamic: ToInstance, provider("WmiProv"), Locale("MS\\0x409"), Description("Class used to operate methods on a ULong"), guid("{ABBC0F6D-8EA1-11d1-00A0-C90629100000}")]
class CLEVO_GET
{
	[key, read] string InstanceName;
	[read] boolean Active;
	[WmiMethodId(1), Implemented, read, write, Description("Return CLEVO EVENT BYTE")] void GetEvent([out, Description("EVENT BYTE")] uint32 Data);
	[WmiMethodId(2), Implemented, read, write, Description("Package1")] void Package1([in, Description("Package1"), MAX(255)] uint8 Bytes[], [out, Description("Return Result")] Package Data);
	[WmiMethodId(3), Implemented, read, write, Description("Package2")] void Package2([in, Description("Package2"), MAX(255)] uint8 Bytes[], [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(4), Implemented, read, write, Description("Package3")] void Package3([in, Description("Package3"), MAX(255)] uint8 Bytes[], [out, Description("Return Result")] Package Data);
	[WmiMethodId(5), Implemented, read, write, Description("Get Radio staue for wirless")] void GetRadioStateForWirless([out, Description("Get Radio staue for wirless")] uint16 Data);
	[WmiMethodId(6), Implemented, read, write, Description("Get Power staue for camera")] void GetPowerStateForCamera([out, Description("Get Power staue for camera")] uint16 Data);
	[WmiMethodId(7), Implemented, read, write, Description("Get Power staue for bluetooth")] void GetPowerStateForBluetooth([out, Description("Get Package Data")] Package Data);
	[WmiMethodId(8), Implemented, read, write, Description("Get SRS state")] void GetSRSState([out, Description("Get SRS state")] uint16 Data);
	[WmiMethodId(9), Implemented, read, write, Description("Get TouchPad state")] void GetTouchPadState([out, Description("Get TouchPad state")] uint16 Data);
	[WmiMethodId(10), Implemented, read, write, Description("Get Power staue for 3G")] void GetPowerStateFor3G([out, Description("Get Power staue for 3G")] uint16 Data);
	[WmiMethodId(11), Implemented, read, write, Description("Get Power staue for ODD")] void GetPowerStateForODD([out, Description("Get Power staue for ODD")] uint16 Data);
	[WmiMethodId(12), Implemented, read, write, Description("Get EC Live Information")] void GetECLiveInfo([out, Description("Get EC Live Information ")] Package Data);
	[WmiMethodId(13), Implemented, read, write, Description("PackageReadEC")] void PackageReadEC([out, Description("PackageReadEC")] Package Data);
	[WmiMethodId(14), Implemented, read, write, Description("PackageWriteEC")] void PackageWriteEC([in, Description("PackageWriteEC"), MAX(255)] uint8 Bytes[], [out, Description("Return Result")] uint16 Data);
	[WmiMethodId(15), Implemented, read, write, Description("Get VGA Thermal IC temperature for VGA2 Thermal sensor")] void GetVGA2tempThermalIC([out, Description(" Get VGA2 die temperature Thermal IC")] uint16 Data);
	[WmiMethodId(16), Implemented, read, write, Description("Get CPU performance")] void GetCPUPerformance([out, Description("Get CPU performance")] uint32 Data);
	[WmiMethodId(17), Implemented, read, write, Description("Get CPU FAN control scheme")] void GetCPUFANControl([out, Description("Get CPU FAN control scheme")] uint16 Data);
	[WmiMethodId(18), Implemented, read, write, Description("GetXMP")] void GetXMP([out, Description("GetXMP")] Package Data);
	[WmiMethodId(19), Implemented, read, write, Description("Set Airplane OSD")] void SetAirplaneOsd([in, Description("SetAirplaneOsd")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(21), Implemented, read, write, Description("Set Ten Key")] void SetTenKey([in, Description("Set Ten Key")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(26), Implemented, read, write, Description("Reset USB Hub")] void ResetUsbHub([in, Description("Reset USB Hub")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(27), Implemented, read, write, Description("Setup E-mail LED OFF")] void SetEmailLEDOFF([in, Description("Setup E-mail LED off")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(28), Implemented, read, write, Description("Setup E-mail LED ON")] void SetEmailLEDON([in, Description("Setup E-mail LED on")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(29), Implemented, read, write, Description("Set CPU performance")] void SetCPUPerformance([in, Description("Setup CPU performance")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(30), Implemented, read, write, Description("Setup CPU FAN control scheme")] void SetCPUFANControl([in, Description("Setup CPU FAN control scheme")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(31), Implemented, read, write, Description("Setup LCD AutoDimmer")] void SetLCDAutoDimmer([in, Description("Setup LCD AutoDimmer")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(32), Implemented, read, write, Description("Set WLan")] void SetWLan([in, Description("Set WLan")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(33), Implemented, read, write, Description("Set BT")] void SetBT([in, Description("Set BT")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(34), Implemented, read, write, Description("Set Camera")] void SetCamera([in, Description("Set Camera")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(38), Implemented, read, write, Description("Setup GPIO12")] void SetGPIO12([in, Description("Setup GPIO12")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(39), Implemented, read, write, Description("SetWhiteLedKB")] void SetWhiteLedKB([in, Description("SetWhiteLedKB")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(40), Implemented, read, write, Description("Setup YearMonth")] void SetYearMonth([in, Description("Setup YearMonth")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(41), Implemented, read, write, Description("Setup DayHour")] void SetDayHour([in, Description("Setup DayHour")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(42), Implemented, read, write, Description("Setup Touchpad")] void SetTP([in, Description("Setup Touchpad")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(43), Implemented, Description("Setup Rotation degree")] void SetupRotationdegree([in, Description("Setup Rotation degree"), MAX(255)] uint8 Bytes[], [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(44), Implemented, read, write, Description("Return HD Temp")] void ReturnHDTemp([in, Description("Return HD Temp")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(45), Implemented, read, write, Description("Return Popup Mode")] void ReturnPopupMode([in, Description("Return Popup Mode")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(46), Implemented, read, write, Description("Set RFID")] void SetRFID([in, Description("Set RFID")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(47), Implemented, read, write, Description("Set GPS")] void SetGPS([in, Description("Set GPS")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(48), Implemented, read, write, Description("Set BarCode")] void SetBarCode([in, Description("Set BarCode")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(49), Implemented, read, write, Description("Set VolumeLED")] void SetVolumeLED([in, Description("Set VolumeLED")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(75), Implemented, read, write, Description("Set XPBrightness")] void SetXPBrightness([in, Description("Set XPBrightness")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(76), Implemented, read, write, Description("Set 3G")] void Set3G([in, Description("Set 3G")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(77), Implemented, read, write, Description("Set ColorKey")] void SetColorKey([in, Description("Set ColorKey")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(78), Implemented, read, write, Description("Set Sensor")] void SetSensor([in, Description("Set Sensor")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(79), Implemented, read, write, Description("Set EnergyStar")] void SetEnergyStar([in, Description("Set EnergyStar")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(85), Implemented, read, write, Description("Set OS")] void SetOS([in, Description("Set OS")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(86), Implemented, read, write, Description("Set NVIDIA")] void SetNVIDIA([in, Description("Set NVIDIA")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(87), Implemented, read, write, Description("Set Mute Button")] void SetMuteButton([in, Description("Set Mute Button")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(88), Implemented, read, write, Description("SetDocking")] void SetDocking([in, Description("SetDocking")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(89), Implemented, read, write, Description("SetMenu")] void SetMenu([in, Description("SetMenu")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(90), Implemented, read, write, Description("EmulatedButton")] void EmulatedButton([in, Description("EmulatedButton")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(91), Implemented, read, write, Description("USB")] void USB([in, Description("USB")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(92), Implemented, read, write, Description("LightSensor")] void LightSensor([in, Description("LightSensor")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(93), Implemented, read, write, Description("SetBrightnessLevel")] void SetBrightnessLevel([in, Description("SetBrightnessLevel")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(94), Implemented, read, write, Description("SetBacklightOff")] void SetBacklightOff([in, Description("SetBacklightOff")] uint16 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(103), Implemented, read, write, Description("SetKBLED")] void SetKBLED([in, Description("SetKBLED")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(104), Implemented, read, write, Description("SetFanDuty")] void SetFanDuty([in, Description("SetFanDuty")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(105), Implemented, read, write, Description("SetFanAutoDuty")] void SetFanAutoDuty([in, Description("SetFanAutoDuty")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(106), Implemented, read, write, Description("SetECResumerTimer")] void SetECResumerTimer([in, Description("SetECResumerTimer")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(107), Implemented, read, write, Description("SetH2RAMIndex")] void SetH2RAMIndex([in, Description("SetH2RAMIndex")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(108), Implemented, read, write, Description("SetCCDLED")] void SetCCDLED([in, Description("SetCCDLED")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(116), Implemented, read, write, Description("TalkECVolume")] void TalkECVolume([in, Description("TalkECVolume")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(117), Implemented, read, write, Description("WritetH2RAM")] void WritetH2RAM([in, Description("WritetH2RAM")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(118), Implemented, read, write, Description("TalkECTime")] void TalkECTime([in, Description("TalkECTime")] uint64 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(119), Implemented, read, write, Description("GetChargingStatus")] void GetChargingStatus([out, Description("GetChargingStatus")] uint32 Data);
	[WmiMethodId(120), Implemented, read, write, Description("TalkBIOS3G")] void TalkBIOS3G([in, Description("TalkBIOS3G")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(121), Implemented, read, write, Description("SystemControlFunction")] void SystemControlFunction([in, Description("SystemControlFunction")] uint32 Data, [out, Description("Return Result")] uint16 Data1);
	[WmiMethodId(122), Implemented, read, write, Description("BiosSpecialFeature")] void BiosSpecialFeature([out, Description("BiosSpecialFeature")] uint32 Data);
	[WmiMethodId(50), Implemented, read, write, Description("Get Battery Design Capacity")] void GetBatteryDesignCpacity([out, Description("Get Battery Design Capacity")] uint32 Data);
	[WmiMethodId(51), Implemented, read, write, Description("Get Battery Average time to full charge")] void GetBatteryAverageTimeToFullCharge([out, Description("Get Battery Average time to full charge")] uint32 Data);
	[WmiMethodId(52), Implemented, read, write, Description("Get Battery Average time to empty")] void GetBatteryAverageTimeToEmpty([out, Description("Get Battery Average time to empty")] uint32 Data);
	[WmiMethodId(53), Implemented, read, write, Description("Get CPU FAN Duty")] void GetCPUFANDuty([out, Description("Get CPU FAN Duty")] uint32 Data);
	[WmiMethodId(54), Implemented, read, write, Description("Get VGA1 FAN Duty")] void GetVGA1FANDuty([out, Description("Get VGA1 FAN Duty")] uint32 Data);
	[WmiMethodId(55), Implemented, read, write, Description("Get VGA2 FAN Duty")] void GetVGA2FANDuty([out, Description("Get VGA2 FAN Duty")] uint32 Data);
	[WmiMethodId(56), Implemented, read, write, Description("Get FAN Count")] void GetFANCount([out, Description("Get Battery Average time to empty")] uint32 Data);
	[WmiMethodId(57), Implemented, read, write, Description("Get Board ID")] void GetBoardId([out, Description("Get Board ID")] uint32 Data);
	[WmiMethodId(58), Implemented, read, write, Description("Get Oem 1")] void GetOem1([out, Description("Get Oem 1")] uint32 Data);
	[WmiMethodId(59), Implemented, read, write, Description("Get LCD resolution")] void GetLCDResolution([out, Description("Get LCD resolution")] uint32 Data);
	[WmiMethodId(60), Implemented, read, write, Description("Get HDMI port")] void GetHDMIport([out, Description("Get HDMI port")] uint32 Data);
	[WmiMethodId(61), Implemented, read, write, Description("GetWhiteLedKB")] void GetWhiteLedKB([out, Description("GetWhiteLedKB")] uint32 Data);
	[WmiMethodId(62), Implemented, read, write, Description("Get GSensor Mode")] void GetGSensorMode([out, Description("Get GSensor Mode")] uint32 Data);
	[WmiMethodId(63), Implemented, read, write, Description("Get HD Polling Time")] void GetHDPollingTime([out, Description("Get HD Polling Time")] uint32 Data);
	[WmiMethodId(64), Implemented, read, write, Description("Get RFID")] void GetRFID([out, Description("Get RFID")] uint32 Data);
	[WmiMethodId(65), Implemented, read, write, Description("Get EC Data")] void GetECData([in, Description("Get EC Data")] uint32 Data, [out, Description("Return Result")] uint32 Data1);
	[WmiMethodId(66), Implemented, read, write, Description("Get BarCode")] void GetBarCode([out, Description("Get BarCode")] uint32 Data);
	[WmiMethodId(67), Implemented, read, write, Description("GetBIOS_SF")] void GetBIOS_SF([out, Description("GetBIOS_SF")] uint32 Data);
	[WmiMethodId(68), Implemented, read, write, Description("Get Volume LED")] void GetVolumeLED([out, Description("Get Volume LED")] uint32 Data);
	[WmiMethodId(69), Implemented, read, write, Description("Get Current Brightness")] void GetCurrentBrightness([out, Description("Get Current Brightness")] uint32 Data);
	[WmiMethodId(70), Implemented, read, write, Description("Setup AP")] void GetAP([out, Description("Setup AP")] uint32 Data);
	[WmiMethodId(71), Implemented, read, write, Description("Set FactoryMode")] void SetFactoryMode([out, Description("Set FactoryMode")] uint32 Data);
	[WmiMethodId(72), Implemented, read, write, Description("OS_S3_S4")] void OS_S3_S4([out, Description("OS_S3_S4")] uint32 Data);
	[WmiMethodId(74), Implemented, read, write, Description("RapidStarMode")] void RapidStarMode([out, Description("RapidStarMode")] uint32 Data);
	[WmiMethodId(80), Implemented, read, write, Description("Get Total Current mA in AC")] void GetACmA([out, Description("Get Total Current mA in AC")] uint32 Data);
	[WmiMethodId(81), Implemented, read, write, Description("Get Battery mA and mV in DC")] void GetDCmAmV([out, Description("Get Battery mA and mV in DC")] uint32 Data);
	[WmiMethodId(82), Implemented, read, write, Description("BIOS special feature list")] void BIOS_special_feature_list([out, Description("BIOS special feature list")] uint32 Data);
	[WmiMethodId(83), Implemented, read, write, Description("Get LightSensor Lux Value")] void GetLux([out, Description("GetLux")] uint32 Data);
	[WmiMethodId(84), Implemented, read, write, Description("Aero")] void Aero([out, Description("Aero")] uint32 Data);
	[WmiMethodId(96), Implemented, read, write, Description("GetTP_SW")] void GetTP_SW([out, Description("GetTP_SW")] uint32 Data);
	[WmiMethodId(97), Implemented, read, write, Description("GetFanStatus")] void GetFanStatus([out, Description("GetFanStatus")] uint32 Data);
	[WmiMethodId(98), Implemented, read, write, Description("RapidStar")] void RapidStar([out, Description("RapidStar")] uint32 Data);
	[WmiMethodId(99), Implemented, read, write, Description("Fan1Info")] void Fan1Info([out, Description("Fan1Info")] uint32 Data);
	[WmiMethodId(100), Implemented, read, write, Description("Fan2Info")] void Fan2Info([out, Description("Fan2Info")] uint32 Data);
	[WmiMethodId(110), Implemented, read, write, Description("Fan3Info")] void Fan3Info([out, Description("Fan3Info")] uint32 Data);
	[WmiMethodId(111), Implemented, read, write, Description("Fan4Info")] void Fan4Info([out, Description("Fan4Info")] uint32 Data);
	[WmiMethodId(112), Implemented, read, write, Description("GetFan12RPM")] void GetFan12RPM([out, Description("GetFan12RPM")] uint32 Data);
	[WmiMethodId(113), Implemented, read, write, Description("GetFan34RPM")] void GetFan34RPM([out, Description("GetFan34RPM")] uint32 Data);
	[WmiMethodId(115), Implemented, read, write, Description("GetH2RAMData")] void GetH2RAMData([out, Description("GetH2RAMData")] uint32 Data);
	[WmiMethodId(109), Implemented, read, write, Description("AirplaneButton")] void AirplaneButton([out, Description("AirplaneButton")] uint32 Data);
};